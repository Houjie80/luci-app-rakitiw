#
# Copyright (c) 2022-2023 SMALLPROGRAM <https://github.com/smallprogram>
# Description: Auto compile
#
name: "Auto compile with OpenWrt SDK for Main"
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  push:
    branches:
      - 'main'
    paths:
      - 'luci-app-rakitiw/Makefile'
env:
  TZ: Asia/Jakarta
  rakitiw: ${{ github.repository }}

jobs:
  job_check:
    name: Check Version
    runs-on: ubuntu-latest
    outputs:
      rakitiw_version: ${{ steps.check_version.outputs.latest_version }}
      has_update: ${{ steps.check_version.outputs.has_update }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: 'main'

      - name: Check version
        id: check_version
        env:
          url_release: https://api.github.com/repos/${{ env.rakitiw }}/releases/latest
        run: |
          cd luci-app-rakitiw
          latest_version=$(awk -F ':=' '/PKG_VERSION|PKG_RELEASE/ {print $2}' Makefile | sed ':a;N;s/\n$//;s/\n/-/;ba')
          latest_release=$(wget -qO- -t1 -T2 ${{env.url_release}} | awk -F '"' '/tag_name/{print $4}')
          has_update=$([ "${latest_version}" != "${latest_release}" ] && echo true || echo false)
          echo "::set-output name=latest_version::${latest_version}"
          echo "::set-output name=has_update::${has_update}"
          echo "latest_version: ${latest_version}"
          echo "latest_release: ${latest_release}"
          echo "has_update: ${has_update}"

      - name: Prepare release
        if: steps.check_version.outputs.has_update == 'true'
        run: |
          echo "## :mega:Update content" >> release.txt
          echo "![](https://img.shields.io/github/downloads/${{ env.rakitiw }}/${{ steps.check_version.outputs.latest_version }}/total?style=flat-square)" >> release.txt
          echo "### rakitiw Info" >> release.txt
          echo "**:minidisc: rakitiw Version: ${{ steps.check_version.outputs.latest_version }}**" >> release.txt
          echo "---" >> release.txt
          echo "INFORMATION TESTED" >> release.txt
          echo "---" >> release.txt
          echo "#### Modem Rakitan:" >> release.txt
          echo "* Dell Dw5821e" >> release.txt
          echo "* Fibocom L850 GL" >> release.txt
          echo "* Fibocom L860 GL" >> release.txt
          echo "" >> release.txt
          echo "#### Modem HP:" >> release.txt
          echo "* Semua Tipe HP Root / Non Root" >> release.txt
          echo "> Jangan Lupa USB Debugging Aktif" >> release.txt
          echo "" >> release.txt
          echo "#### Modem Huawei / Orbit:" >> release.txt
          echo "* Huawei B310s-22" >> release.txt
          echo "* Huawei B312-926" >> release.txt
          echo "* Huawei B315s-22" >> release.txt
          echo "* Huawei B525s-23a" >> release.txt
          echo "* Huawei B525s-65a" >> release.txt
          echo "* Huawei B715s-23c" >> release.txt
          echo "* Huawei B528s" >> release.txt
          echo "* Huawei B535-232" >> release.txt
          echo "* Huawei B628-265" >> release.txt
          echo "* Huawei B612-233" >> release.txt
          echo "* Huawei B818-263" >> release.txt
          echo "* Huawei E5186s-22a" >> release.txt
          echo "* Huawei E5576-320" >> release.txt
          echo "* Huawei E5577Cs-321" >> release.txt
          echo "* Huawei E8231" >> release.txt
          echo "* SoyeaLink B535-333" >> release.txt
          echo "* Huawei E3131" >> release.txt
          echo "* Huawei E3372" >> release.txt
          echo "* Huawei E3531" >> release.txt
          echo "* Huawei 5G CPE Pro 2 (H122-373)" >> release.txt
          echo "* Huawei 5G CPE Pro (H112-372)" >> release.txt
          echo "" >> release.txt
          echo "(probably will work for other Huawei LTE devices too)" >> release.txt
          echo "---" >> release.txt
          echo "INSTALL & UPGRADE" >> release.txt
          echo "---" >> release.txt
          echo "" >> release.txt
          echo "![Tutor Install](https://github.com/rtaserver/luci-app-rakitiw/assets/142883865/1694190b-c025-4855-a77d-8212fab27564)" >> release.txt
          echo "" >> release.txt
          echo "1. Upload File IPK Ke Folder Root (biar gampang)" >> release.txt
          echo "2. Buka / Akses Terminal Openwrt" >> release.txt
          echo "3. Stop Dan Hapus \`luci-app-rakitiw\` dahulu Jalankan di Terminal. Jika Fresh Install Bisa Skip Ini Lanjut No 4" >> release.txt
          echo "4. Setelah Terhapus Jalankan Kembali Perintah ini di Terminal" >> release.txt
          echo "```" >> release.txt
          echo "$ /etc/init.d/rakitiw stop" >> release.txt
          echo "$ opkg remove luci-app-rakitiw" >> release.txt
          echo "```" >> release.txt
          echo "5. Setelah Terhapus, Jalankan Perintah ini di Terminal" >> release.txt
          echo "```" >> release.txt
          echo "$ opkg update" >> release.txt
          echo "$ cd /root" >> release.txt
          echo "$ opkg install luci-app-rakitiw*.ipk" >> release.txt
          echo "```" >> release.txt
          echo "6. Tunggu Hingga Proses Instalasi Selesai. *Pastika Ada Koneksi Internet*" >> release.txt
          echo "7. Jika Gagal Install Atau Upgrade, Coba Update Depends Secara Manual" >> release.txt
          echo "```" >> release.txt
          echo "$ opkg update" >> release.txt
          echo "$ opkg install modemmanager" >> release.txt
          echo "$ opkg install python3-pip" >> release.txt
          echo "$ pip3 install requests" >> release.txt
          echo "$ pip3 install huawei-lte-api" >> release.txt
          echo "$ opkg install luci-app-rakitiw*.ipk --force-reinstall" >> release.txt
          echo "```" >> release.txt
          echo "8. Jika Proses Instalasi Berhasil, Buka Modem Rakitan di Tab Modem" >> release.txt
          echo "9. Atau Bisa: http://192.168.1.1/rakitiw - Sesuaikan dengan IP OpenWrt" >> release.txt
          echo "10. Jangan lupa untuk menyesuaikan langkah-langkah dengan kebutuhan dan kondisi perangkat Anda." >> release.txt
          echo "11. Pastikan Anda memiliki cadangan data penting sebelum melakukan upgrade atau instalasi baru." >> release.txt
          touch release.txt

      - name: Generate new tag & release
        if: steps.check_version.outputs.has_update == 'true'
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          prerelease: false
          tag_name: ${{ steps.check_version.outputs.latest_version }}
          body_path: release.txt

  build_ipk:
    needs: job_check
    outputs:
      rakitiw_version: ${{ needs.job_check.outputs.rakitiw_version }}
      has_update: ${{ needs.job_check.outputs.rakitiw_version }}
    permissions:
      contents: write
    name: Build Rakitiw
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        release:
          - 21.02.7
          - 23.05.0
        arch:
          - x86_64

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Preparing Rakitiw
        run: |
          echo ""
          mkdir feeds artifacts
          cp -rf ./luci-app-rakitiw ./feeds

      - name: Building Luci Rakitiw
        uses: openwrt/gh-action-sdk@main
        env:
          ARCH: ${{ matrix.arch }}-${{ matrix.release }}
          ARTIFACTS_DIR: ${{ github.workspace }}/artifacts
          FEED_DIR: ${{ github.workspace }}/feeds
          PACKAGES: luci-app-rakitiw
          NO_SHFMT_CHECK: 1

      - name: Delivering Package
        uses: actions/upload-artifact@v2
        with:
          name: luci-app-rakitiw-${{ matrix.release }}_${{ matrix.arch }}
          path: ${{ github.workspace }}/artifacts/bin/packages/${{ matrix.arch }}/action/luci-app-rakitiw*

  push_packages:
    needs: build_ipk
    name: Push Packages to Release
    permissions:
      contents: write  # To push a branch
    runs-on: ubuntu-latest
    steps:
      - name: Download temporary artifact
        uses: actions/download-artifact@v3

      - name: Moving artifact to releases
        shell: bash
        run: |
          mkdir ./release
          cp -rf ./luci-app-rakitiw-21.02.7_x86_64/* ./release/luci-app-rakitiw_${{ needs.build_ipk.outputs.rakitiw_version }}_all_21_02.ipk
          cp -rf ./luci-app-rakitiw-23.05.0_x86_64/* ./release/luci-app-rakitiw_${{ needs.build_ipk.outputs.rakitiw_version }}_all_23_05.ipk

      - name: Upload release asset
        uses: svenstaro/upload-release-action@v2
        with:
          prerelease: false
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./release/*
          overwrite: true
          tag: ${{ needs.build_ipk.outputs.rakitiw_version }}
          file_glob: true